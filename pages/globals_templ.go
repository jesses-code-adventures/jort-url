// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

type GlobalsArgs struct {
	Title string
}

func NewGlobalsArgs(title string) GlobalsArgs {
	return GlobalsArgs{
		Title: title,
	}
}

func Globals(opts GlobalsArgs) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(opts.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `pages/globals.templ`, Line: 17, Col: 26}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</title><script src=\"/static/htmx.js\"></script><link href=\"/static/output.css\" rel=\"stylesheet\"></head><script type=\"text/javascript\">\n        let darkMode = false;\n\n        function setCookie(cname, cvalue, exdays) {\n          const d = new Date();\n          d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n          let expires = \"expires=\" + d.toUTCString();\n          document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n        }\n\n        function applyDarkModePreference() {\n          const darkModeCookie = getCookie(\"darkMode\");\n          if (darkModeCookie) {\n            document.documentElement.classList.toggle(\"dark\", darkModeCookie === \"true\");\n            darkMode = darkModeCookie === \"true\";\n          } else {\n            const prefersDarkMode = window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n            document.documentElement.classList.toggle(\"dark\", prefersDarkMode);\n            setCookie(\"darkMode\", prefersDarkMode, 365);\n            darkMode = prefersDarkMode;\n          }\n        }\n\n        function toggleDarkMode() {\n            const hamburger = document.getElementById(\"hamburger\");\n            if (darkMode) {\n                setCookie(\"darkMode\", \"false\", 365);\n                darkMode = false;\n                document.documentElement.classList.toggle(\"dark\");\n                if (hamburger !== null) {\n                    hamburger.src = \"/static/hamburger.svg\";\n                }\n            } else {\n                setCookie(\"darkMode\", \"true\", 365);\n                darkMode = true;\n                document.documentElement.classList.toggle(\"dark\");\n                if (hamburger !== null) {\n                    hamburger.src = \"/static/hamburger_dark.svg\";\n                }\n            }\n            const dropdownMenu = document.getElementById(\"dropdownContainer\");\n            if (dropdownMenu === null) {\n                throw new Error(\"Dropdown menu not found\");\n            }\n            if (!dropdownMenu.classList.contains(\"hidden\")) {\n                dropdownMenu.classList.toggle(\"hidden\");\n            }\n        }\n    </script><body class=\"h-screen overflow-y-scroll w-full text-center dark:bg-black dark:text-white\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
